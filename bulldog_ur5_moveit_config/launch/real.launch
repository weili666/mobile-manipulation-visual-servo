<launch>

  <arg name="prefix" default="ur5_arm_" />
  <arg name="robot_ip" default="192.168.1.50"/>
  <arg name="reverse_port" default="50001"/>
  <arg name="min_payload"  default="0.0"/>
  <arg name="max_payload"  default="3.0"/>
  <arg name="max_velocity" default="5.0"/> 
  <arg name="servoj_time" default="0.008" />
  <arg name="base_frame" default="ur5_arm_base_link" />
  <arg name="tool_frame_right" default="$(arg prefix)tool0" />

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find bulldog_ur5_moveit_config)/default_warehouse_mongo_db" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!--
  By default, hide joint_state_publisher's GUI

  MoveIt!'s "demo" mode replaces the real robot driver with the joint_state_publisher.
  The latter one maintains and publishes the current joint configuration of the simulated robot.
  It also provides a GUI to move the simulated robot around "manually".
  This corresponds to moving around the real robot without the use of MoveIt.
  -->
  <arg name="use_gui" default="false" />

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find bulldog_ur5_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->
  

  <!-- We do not have a robot connected, so publish fake joint states -->
  <!--<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="$(arg use_gui)"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>-->

<group ns="ur5_arm">
    <node name="ur_driver" pkg="ur_modern_driver" type="ur_driver" output="screen">
      <param name="prefix" type="str" value="$(arg prefix)" />
      <param name="robot_ip_address" type="str" value="$(arg robot_ip)" />
      <param name="reverse_port" value="$(arg reverse_port)"/>
      <param name="min_payload" type="double" value="$(arg min_payload)" />
      <param name="max_payload" type="double" value="$(arg max_payload)" />
      <param name="max_velocity" type="double" value="$(arg max_velocity)" />
      <param name="servoj_time" type="double" value="$(arg servoj_time)" />
      <param name="base_frame" type="str" value="$(arg base_frame)"/>
      <param name="tool_frame" type="str" value="$(arg tool_frame_right)"/>
    </node>
  </group>

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find bulldog_ur5_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find bulldog_ur5_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find bulldog_ur5_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>


</launch>
